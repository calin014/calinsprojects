<?xml version="1.0"?>
<project name="ranking-benchmark" default="benchmark" basedir=".">
	<property name="technique" value="lucene" />
	<property name="aggregator" value="borda" />
	<property name="aggr" value="" />
	<property name="collection" value="ohsumed-small" />
	<property name="collection.num" value="1" />
	<property name="query.spec" value="T" />
	<property name="query.nbres" value="1000" />
	<property name="technique.test" value="" />
	<property name="export.dir" value="../exported" />
	<property name="analyzer" value="simple" />

	<path id="prj.classpath">
		<pathelement location="benchmark/code/classes" />
		<fileset dir="jars" includes="*.jar">
		</fileset>
	</path>

	<target name="compile">
		<mkdir dir="benchmark/code/classes" />
		<javac srcdir="benchmark/code/java" destdir="benchmark/code/classes" source="1.6">
			<classpath refid="prj.classpath" />
		</javac>
	</target>

	<target name="clean">
		<delete dir="benchmark/code/classes" />
	</target>

	<target name="cli">
		<delete dir="collections/${collection}/index" />
	</target>

	<target name="clr">
		<delete includeemptydirs="true">
		  <fileset dir="benchmark/results/" includes="**/*" excludes=".svn"/>
		</delete>
	</target>

	<target name="check-index">
		<available file="collections/${collection}/index_${analyzer}" type="dir" property="index.exist" />
	</target>

	<target name="index" depends="check-index,compile" unless="index.exist">
		<java classname="ro.ranking.benchmarking.Indexer" maxmemory="512M" fork="true">
			<classpath refid="prj.classpath" />
			<arg file="collections/${collection}" />
			<arg value="${analyzer}"/>
		</java>
	</target>

	<target name="benchmark" depends="index,compile">
		<script language="js">
			if(project.getProperty('technique').indexOf(',') != -1) {
		    	project.setProperty('aggr', '-' + project.getProperty('aggregator'))
			}
			
			function S4() {
			   return (((1+Math.random())*0x10000)|0).toString(16).substring(1);
			}
			function guid() {
			   return (S4()+S4()+"-"+S4()+"-"+S4()+"-"+S4()+"-"+S4()+S4()+S4());
			}
			project.setProperty('guid', guid());
			
			if(project.getProperty('test') != null) {
				project.setProperty('technique.test', '#' + project.getProperty('test') + '#');
			}
		</script>

		<java classname="ro.ranking.benchmarking.QueryDriver" maxmemory="512M" fork="true">
			<classpath refid="prj.classpath" />
			<arg file="collections/${collection}/queries${collection.num}.txt" />
			<arg file="collections/${collection}/judgements${collection.num}.txt" />
			<arg file="collections/${collection}/index_${analyzer}" />
			<arg value="${technique}" />
			<arg value="${aggregator}" />
			<arg file="benchmark/results/subm_${guid}.txt" />
			<arg value="${query.spec}"/>
			<arg value="${query.nbres}"/>
			<arg value="${analyzer}" />
		</java>

		<exec executable="utils/trec_eval.exe" 
			output="benchmark/results/${technique.test}${technique}${aggr}-${query.spec}-${analyzer}@${collection}-set${collection.num}.txt">
			<arg file="collections/${collection}/judgements${collection.num}.txt" />
			<arg file="benchmark/results/subm_${guid}.txt" />
		</exec>

		<delete file="benchmark/results/subm_${guid}.txt" />
	</target>

	<target name="report">
		<java classname="ro.ranking.reporting.Report" fork="true">
			<classpath refid="prj.classpath" />
			<arg file="benchmark/results/"/>
			<arg value="${collection}-set${collection.num}"/>
		</java>

		<exec executable="cmd.exe">
			<arg value="/C" />
			<arg value="start" />
			<arg file="benchmark/results/${collection}-set${collection.num}/results.html" />
		</exec>

	</target>

	<target name="export">
		<mkdir dir="${export.dir}" />
		<copyfile dest="${export.dir}/build.xml" src="./build.xml" />
		<copydir dest="${export.dir}/jars" src="./jars">
		</copydir>
		<copydir dest="${export.dir}/benchmark/code/java" src="./benchmark/code/java">
		</copydir>
	</target>

</project>